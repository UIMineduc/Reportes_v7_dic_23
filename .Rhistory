xaxis=list(title="<b>Grado 2022</b>", font = list(family = "verdana", size = 40), showlegend = FALSE,  categoryarray = fct_rev(data_plot2$nom_grado_2022r), categoryorder = "array", tickangle = -45),
yaxis=list(title="<b>N° estudiantes 2022 no matriculados en 2023</b>", font = list(family = "verdana", size = 24), range = list(0, max(data_plot2$n) + 5), showlegend = FALSE, showgrid = F, autotick = FALSE, dtick = 5),
plot_bgcolor='transparent', paper_bgcolor='transparent', autosize = F, width = 2000, height = 1200, margin = list(l=-0.1, t = -0.1, r=-0.1))
# url_cur_desv_g = paste0("/Img temp/", ee,"_cur_desv_g.png")
# orca(k, url_cur_desv_g)
url_cur_desv_g = paste0(getwd(),"/Img temp/", ee,"_cur_desv_g.png")
save_image(k, url_cur_desv_g)
########## GRAFICO BARRA CURSO RETIRADOS
data_plot2_n_2 <- data_plot2_n_2_todos %>% filter(rbd == ee)
data_plot2_2 <- data_plot2_2 %>% arrange(nom_grado)
data_plot2_t_2 <- desvinc2 %>% group_by(nom_grado) %>% summarise(n = n())
data_plot2_2  <- left_join(data_plot2_2, data_plot2_t_2, by="nom_grado")
data_plot2_2  <- left_join(data_plot2_2, data_plot2_n_2, by="nom_grado")
data_plot2_2  <- data_plot2_2 %>% mutate(n = ifelse(is.na(n), 0, n)) %>% mutate(porc_desvinc = ifelse(n_total != 0, 100*round(n/n_total, 3), 0))
k2 <- plot_ly(x=~data_plot2_2$nom_grado, y = ~data_plot2_2$n , type = "bar", marker = list(color = celeste), text = paste0("<b style='color:#007096'>", data_plot2_2$n), textfont = list(family = "verdana", size = 35, color = '#FFFFFF'), textposition = 'outside') %>%
layout(font = list(family = "verdana", color = azul, size = 30), title = "", #azul antiguo '#007096'
xaxis=list(title="<b>Grado 2023</b>", font = list(family = "verdana", size = 40), showlegend = FALSE,  categoryarray = fct_rev(data_plot2_2$nom_grado), categoryorder = "array", tickangle = -45),
yaxis=list(title="<b>N° estudiantes 2023 retirados sin matríc. vigente</b>", font = list(family = "verdana", size = 24), range = list(0, max(data_plot2_2$n) + 3), showlegend = FALSE, showgrid = F, autotick = FALSE, dtick = 5),
plot_bgcolor='transparent', paper_bgcolor='transparent', autosize = F, width = 2000, height = 1200, margin = list(l=-0.1, t = -0.1, r=-0.1))
# url_cur_desv_g_2 = paste0("/Img temp/", ee,"_cur_desv_g_2.png")
# orca(k2, url_cur_desv_g_2)
url_cur_desv_g_2 = paste0(getwd(),"/Img temp/", ee,"_cur_desv_g_2.png")
save_image(k2, url_cur_desv_g_2)
########## GRAFICO BARRA INASISTENCIA GRAVE
data_plot3_t <- asis_crit %>% group_by(cod_curso) %>% summarise(n = n())
data_plot3_n <- data_plot3_n_todos %>% filter(rbd == ee)
data_plot3  <- data_plot3 %>% arrange(desc(cod_curso))
data_plot3  <- left_join(data_plot3, data_plot3_t, by="cod_curso")
data_plot3  <- left_join(data_plot3, data_plot3_n, by="cod_curso")
data_plot3  <- data_plot3 %>% mutate(n = ifelse(is.na(n), 0, n)) %>% mutate(porc_asis = ifelse(n_total != 0, 100*round(n/n_total, 3), 0))
j <- plot_ly() %>% add_trace(x = ~data_plot3$porc_asis, y = ~data_plot3$cod_curso, marker = list(color = celeste), type = "bar", orientation = "v", text = paste0("<b style='color:#007096'>", data_plot3$porc_asis, "%","</b>", "<i style='color:#007096';> (", data_plot3$n," de ", data_plot3$n_total,")</i>"), textposition = "outside", textfont = list(family = "verdana", size = 30, color = '#FFFFFF'))
j <- j %>% layout(font = list(family = "verdana", color = azul, size = 30), title = "",  #azul antiguo '#007096'
xaxis = list(title="<b>% Estudiantes 2023 con asistencia bajo 85%</b> <i> (N° Estudiantes respecto a matrícula 2023)</i>", font = list(family = "verdana", size = 30), range = list(0, max(data_plot3$porc_asis) + 19), showlegend = FALSE, ticksuffix = "%", showgrid = FALSE, side = "top"),
yaxis = list(title="<b>Grado 2023</b>", font = list(family = "verdana", size = 30), showlegend = FALSE,  categoryarray = fct_rev(data_plot3$cod_curso), categoryorder = "array"),
plot_bgcolor='transparent', paper_bgcolor='transparent', autosize = F, width = 2000, height = 1200, margin = list(l=-0.1, t = -0.1, r=-0.1)
)
#
# j <- plot_ly(x=~data_plot3$cod_curso, y = ~data_plot3$porc_asis , type = "bar", marker = list(color = celeste), text = paste0(data_plot3$n," (",data_plot3$n, " de ",data_plot3$n_total,")"), texttemplate = '%{y}', textposition = 'outside') %>%
#   layout(title="", xaxis=list(font = f4, title='<b>Curso</b>'), yaxis=list(title="<b>N° Estudiantes</b>", autotick = FALSE, dtick = 5),
#          font=f4, plot_bgcolor='transparent', paper_bgcolor='transparent', autosize=T)
#
# url_asis_crit_g = paste0("/Img temp/", ee,"_asis_crit_g.png")
# orca(j, url_asis_crit_g)
url_asis_crit_g = paste0(getwd(),"/Img temp/", ee,"_asis_crit_g.png")
save_image(j, url_asis_crit_g)
########## GRAFICO TORTA INASISTENCIA GRAVE
o <- plot_ly(data_plot5, labels = ~tipo_asis_2, values = ~round(prop,3), type = 'pie', hole = 0.5, textposition = 'outside', text = paste0(round(data_plot5$prop,3)*100,"%<br><i>(", data_plot5$n,")</i>"),
textinfo = 'text', sort = FALSE, marker = list(colors = ~color)) %>%
layout(legend = list(font = list(family = "verdana", size = 14, color = azul), x=1.3 , y=0.5), font=list(family = "verdana", size = 16, color = azul), xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
paper_bgcolor='transparent', autosize = TRUE, margin = list(l = -5, r = -5)
)
# url_asis_crit_tort_g = paste0("/Img temp/", ee,"_asis_crit_tort_g.png")
# orca(o, url_asis_crit_tort_g)
url_asis_crit_tort_g = paste0(getwd(),"/Img temp/", ee,"_asis_crit_tort_g.png")
save_image(o, url_asis_crit_tort_g)
#**************************************************************************************************************************/
### 3.4 RENDER  ----------------------------------------------------------------
#**************************************************************************************************************************/
#Sys.setlocale("LC_ALL","Spanish")
Sys.setlocale("LC_ALL", "ES_ES.UTF-8")
rmarkdown::render("codigos/1 - escuelas/RMKD Informe Escuela - copia.Rmd",
params = list("rbd" = ee, "nom_rbd" = nom_rbd, "nom_com_rbd" = nom_com_rbd, "desvinc" = desvinc, "desvinc2" = desvinc2, "desvinc3" = desvinc3, "asis_crit" = asis_crit, "url_sin_fin_g" = url_sin_fin_g, "url_cur_desv_g" = url_cur_desv_g, "url_cur_desv_g_2" = url_cur_desv_g_2,"url_asis_crit_g" = url_asis_crit_g, "url_asis_crit_tort_g" = url_asis_crit_tort_g,
"n_mat2022" = n_mat2022, "n_desvinc" = n_desvinc, "n_desvinc2" = n_desvinc2, "n_desvinc3" = n_desvinc3, "n_mat2023" = n_mat2023, "n_inasis2023" = n_inasis2023, "textos_variables_desvinculados" = textos_variables_desvinculados, "textos_variables_retirados" = textos_variables_retirados, "textos_variables_asistencia" = textos_variables_asistencia, "textos_variables_doble_desvinculados" = textos_variables_doble_desvinculados, "pass" = pass),
output_file = paste0("Outputs/Escuelas_0/", ee, ".pdf")) # Se modifica el Escuelas 0 para editar la carpeta en al que se guardan
print(paste0("Listo ", i ," de ", nn, " establecimientos. (RBD: ", ee, ")"))
toc()
}) #cierre Try
}
}
rbds1 <- 1
{
# ee = rbds0[10]
for(ee in rbds1){ #rbds1[1]){     #(ee in quinto1$`0`){   #for(ee in unique(bd_asis$rbd)){ #9810 EEFRANI #3055 #3573 no tiene desvinc  #c(9647, 9648, 9653, 9654, 9655)
try({   #En caso de que código tenga error el código sigue ejectuándose
tic()
#**************************************************************************************************************************/
### 3.3 PRE RENDER  ----------------------------------------------------------------
#**************************************************************************************************************************/
i = i+1
pass = paste0("r", ee)
########## SE COMIENZA CON DESVINCULADOS
desvinc <- bd[bd$rbd_2022r == ee,]
nrow(desvinc)
#Grados de los alumnos desvinculados del establecimiento
data_plot2 <- data.frame(nom_grado_2022r = unique(desvinc$nom_grado_2022r))
#valor con el n desvinculados del rbd
n_mat2022 <- nrow(desvinc)
# Dejamos solo estudiantes desertores en mayo y por si acaso se filtra fallecidos, aunque ya vienen como deserción == 0
desvinc <- desvinc %>% filter(categoria_desert == "Desercion incidencia")
desvinc2 <- bd2[bd2$rbd_ret == ee,]
desvinc2 <- desvinc2 %>% filter(categoria_desert == "Retirado 2023")
#Esta version es más rápida porque disminuye el tiempo de asignacion
# tic()
# desvinc2_aa <- bd2 %>% filter(rbd_ret==ee & categoria_desert=="Retirado 2023")
# toc()
desvinc3 <- doble_desvinc[doble_desvinc$rbd == ee,]
n_desvinc <- nrow(desvinc)
n_desvinc2 <- nrow(desvinc2)
n_desvinc3 <- nrow(desvinc3)
desvinc <- desvinc %>% select("run_alu2", "nom_alu2022", "app_alu2022", "apm_alu2022", "gen_alu_2022r", "edad_alu_2022r", "nom_com_alu2022", "nom_grado_2022r", "prom_gral2022", "asistencia2022", "sit_fin_r_2022r",
"rbd_2022r", "nom_rbd_2022r", "cod_depe2_2022r", "cod_reg_rbd2022r2", "nom_com_rbd_2022r", "nom_deprov_rbd2022", "nombre_sost_rbd2022", "rut_sost_rbd2022", "email_sost_rbd2022",  "tel_sost_rbd", "cert_val_22", "valid_estud")
desvinc <- desvinc %>% arrange(nom_grado_2022r)
desvinc2 <- desvinc2 %>% select("run_alu2_ret", "nom_alu_ret", "app_alu_ret", "apm_alu_ret", "gen_alu_ret", "edad_alu_ret", "nom_com_alu_ret", "nom_grado", "fec_ret_rbd_ret", "valid_estud")
desvinc2 <- desvinc2 %>% arrange(nom_grado)   #(nom_grado_2022r)
#desvinc3 <- desvinc3 %>% select("run_alu2", "nom_alu", "app_alu", "apm_alu", "gen_alu", "edad_alu", "nom_com_alu", "nom_grado", "sit_fin_r", "rbd", "nom_rbd", "cod_depe2", "cod_reg_rbd", "nom_com_rbd", "cert_val_22") # cert vald 21? muchos vacios
#"nom_deprov_rbd2022", "nombre_sost_rbd2022", "rut_sost_rbd2022", "email_sost_rbd2022",  "tel_sost_rbd", "valid_estud")
desvinc3 <- desvinc3 %>% select("run_alu2", "nom_alu", "app_alu", "apm_alu", "gen_alu", "edad_alu", "nom_com_alu", "nom_grado", "sit_fin_r", "rbd", "nom_rbd", "cod_depe2", "cod_reg_rbd", "nom_com_rbd", "cert_val_21", "cert_val_22", "insc_val_23") # cert vald 21? muchos vacios
desvinc3 <- desvinc3 %>% arrange(nom_grado)
########## SE EXTRAEN LOS CASOS DE INASISTENCIA Y PARAMETROS
asis_crit <- bd_asis[bd_asis$rbd == ee,]
data_plot3 <- data.frame(cod_curso = unique(asis_crit$cod_curso))
data_plot2_2 <- data.frame(nom_grado = unique(asis_crit$nom_grado))
nom_rbd <- asis_crit$nom_rbd[1]
print("------")
print(ee)
print(nom_rbd)
nom_com_rbd <- asis_crit$nom_com_rbd[1]
print(nom_com_rbd)
n_mat2023 = nrow(asis_crit)
#Datos gráfico de barra de rangos de asistencia
#Esta seccion no tiene informacion que sea necesaria para el loop, por lo que podria sacarse y no alterar el funcionamiento.
#Definir el data_plot para cada establecimiento puede ser demandante de tiempo
#podriamos agregar otra variable al cache?
data_plot5 <- data.frame(tipo_asis_2 = c("Inasist. crítica (0%-49% asist.)", "Inasist. grave (50%-84% asist.)", "Inasist. reiterada (85%-89% asist.)", "Asist. esperada (90%-100% asist.)", "Sin información"), color = c(rojo, amarillo, celeste, azul, gris))  #azul celeste amarillo rosado rojo gris
data_plot5$tipo_asis_2 <- factor(data_plot5$tipo_asis_2, levels = c("Inasist. crítica (0%-49% asist.)", "Inasist. grave (50%-84% asist.)","Inasist. reiterada (85%-89% asist.)", "Asist. esperada (90%-100% asist.)", "Sin información"), labels =  c("Inasist. crítica (0%-49% asist.)", "Inasist. grave (50%-84% asist.)", "Inasist. reiterada (85%-89% asist.)", "Asist. esperada (90%-100% asist.)", "Sin información"))
data_plot5$tipo_asis_2
#arriba se definio n_mat2023 como nrow(asis_crit) podriamos incorporarlo para llamar variables del cache?
if(nrow(asis_crit) > 0){
data_plot5_t <- prop.table(table(asis_crit$tipo_asis_2))
data_plot5_t <- data.frame("tipo_asis_2"=names(data_plot5_t), "prop" = as.numeric(data_plot5_t))
data_plot5_t_n <- table(asis_crit$tipo_asis_2)
data_plot5_t_n <- data.frame("tipo_asis_2"=names(data_plot5_t_n), "n" = as.numeric(data_plot5_t_n))
} else{
data_plot5_t <- data.frame(tipo_asis_2= c("Inasist. crítica (0%-49% asist.)", "Inasist. grave (50%-84% asist.)", "Inasist. reiterada (85%-89% asist.)", "Asist. esperada (90%-100% asist.)", "Sin información"), prop = c(0,0,0,0,0))
data_plot5_t_n <- data.frame(tipo_asis_2= c("Inasist. crítica (0%-49% asist.)", "Inasist. grave (50%-84% asist.)", "Inasist. reiterada (85%-89% asist.)", "Asist. esperada (90%-100% asist.)", "Sin información"), n = c(0,0,0,0,0))
}
#data_plot5_t
data_plot5 <- left_join(data_plot5, data_plot5_t, by = "tipo_asis_2")
data_plot5 <- left_join(data_plot5, data_plot5_t_n, by = "tipo_asis_2")
data_plot5 <- data_plot5 %>% mutate(prop = ifelse(is.na(prop), 0 , prop))
data_plot5 <- data_plot5 %>% mutate(n = ifelse(is.na(n), 0 , n))
####------
asis_crit <- asis_crit %>% filter(inasistencia_grave_acumulada == TRUE)
n_inasis2023 = nrow(asis_crit)
# asis_crit <- asis_crit %>%
# select("run_alu2", "nom_alu", "app_alu", "apm_alu", "cod_curso", "rbd",
# "porcentage_asistencia_marzo","porcentage_asistencia_abril","porcentage_asistencia_mayo",
# "porcentage_asistencia_junio","porcentage_asistencia_julio","porcentage_asistencia_agosto",
# "porcentage_asistencia_septiembre","porcentage_asistencia_octubre","porcentage_asistencia_noviembre",
# "porcentage_asistencia_acumulada", "inasistencia_grave_acumulada", "asistencia_categorias_acumulada", "tipo_asis_2")
# Debemos agregar los meses de asistencia que faltan
asis_crit <- asis_crit %>% select("run_alu2", "nom_alu", "app_alu", "apm_alu",
"cod_curso", "rbd", "porcentage_asistencia_marzo",
"porcentage_asistencia_abril", "porcentage_asistencia_mayo",
"porcentage_asistencia_junio", "porcentage_asistencia_julio", "porcentage_asistencia_agosto",
"porcentage_asistencia_septiembre","porcentage_asistencia_octubre",
"porcentage_asistencia_acumulada", "inasistencia_grave_acumulada", "asistencia_categorias_acumulada", "tipo_asis_2", "asistencia_2022", "sit_fin_22")
"Ordenamos por nivel y asistencia acumulada"
asis_crit <- asis_crit %>% arrange(cod_curso, porcentage_asistencia_acumulada)
"Modificamos las variables de asistencia"
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_acumulada = ifelse(!is.na(porcentage_asistencia_acumulada), paste0(round(porcentage_asistencia_acumulada*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_marzo = ifelse(!is.na(porcentage_asistencia_marzo), paste0(round(porcentage_asistencia_marzo*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_abril = ifelse(!is.na(porcentage_asistencia_abril), paste0(round(porcentage_asistencia_abril*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_mayo = ifelse(!is.na(porcentage_asistencia_mayo), paste0(round(porcentage_asistencia_mayo*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_junio = ifelse(!is.na(porcentage_asistencia_junio), paste0(round(porcentage_asistencia_junio*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_julio = ifelse(!is.na(porcentage_asistencia_julio), paste0(round(porcentage_asistencia_julio*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_agosto = ifelse(!is.na(porcentage_asistencia_agosto), paste0(round(porcentage_asistencia_agosto*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_septiembre = ifelse(!is.na(porcentage_asistencia_septiembre), paste0(round(porcentage_asistencia_septiembre*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_octubre = ifelse(!is.na(porcentage_asistencia_octubre), paste0(round(porcentage_asistencia_octubre*100,0),"%"), "-"))
# Desmarcar para los otros niveles de asistencia
# asis_crit <- asis_crit %>% mutate(porcentage_asistencia_junio = ifelse(!is.na(porcentage_asistencia_junio), paste0(round(porcentage_asistencia_junio*100,0),"%"), "-"))
# asis_crit <- asis_crit %>% mutate(porcentage_asistencia_julio = ifelse(!is.na(porcentage_asistencia_julio), paste0(round(porcentage_asistencia_julio*100,0),"%"), "-"))
# asis_crit <- asis_crit %>% mutate(porcentage_asistencia_agosto = ifelse(!is.na(porcentage_asistencia_agosto), paste0(round(porcentage_asistencia_agosto*100,0),"%"), "-"))
# asis_crit <- asis_crit %>% mutate(porcentage_asistencia_septiembre = ifelse(!is.na(porcentage_asistencia_septiembre), paste0(round(porcentage_asistencia_septiembre*100,0),"%"), "-"))
# asis_crit <- asis_crit %>% mutate(porcentage_asistencia_octubre = ifelse(!is.na(porcentage_asistencia_octubre), paste0(round(porcentage_asistencia_octubre*100,0),"%"), "-"))
# asis_crit <- asis_crit %>% mutate(porcentage_asistencia_noviembre = ifelse(!is.na(porcentage_asistencia_noviembre), paste0(round(porcentage_asistencia_noviembre*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(asistencia_2022 = ifelse(!is.na(asistencia_2022), paste0(round(asistencia_2022*100,0),"%"), "-"))
#print(desvinc)
#print(asis_crit)
########## GRAFICO SIT_FIN
data_plot1 <- data.frame(sit_fin_r_2022r = c("Promovido", "Reprobado", "Retirado", "Sin Registro"), color = c(azul, celeste, rojo, amarillo))
data_plot1$sit_fin_r_2022r <- factor(data_plot1$sit_fin_r_2022r, levels =  c("Promovido", "Reprobado", "Retirado", "Sin Registro"), labels =  c("Promovido", "Reprobado", "Retirado", "Sin Registro"))
if(nrow(desvinc) > 0){
data_plot1_t <- prop.table(table(desvinc$sit_fin_r_2022r))
data_plot1_t <- data.frame("sit_fin_r_2022r"=names(data_plot1_t), "prop" = as.numeric(data_plot1_t))
data_plot1_t_n <- table(desvinc$sit_fin_r_2022r)
data_plot1_t_n <- data.frame("sit_fin_r_2022r"=names(data_plot1_t_n), "n" = as.numeric(data_plot1_t_n))
} else{
data_plot1_t <- data.frame(sit_fin_r_2022r= c("Promovido", "Reprobado", "Retirado", "Sin Registro"), prop = c(0,0,0,0))
data_plot1_t_n <- data.frame(sit_fin_r_2022r= c("Promovido", "Reprobado", "Retirado", "Sin Registro"), n = c(0,0,0,0))
}
data_plot1 <- left_join(data_plot1, data_plot1_t, by = "sit_fin_r_2022r")
data_plot1 <- left_join(data_plot1, data_plot1_t_n, by = "sit_fin_r_2022r")
data_plot1 <- data_plot1 %>% mutate(prop = ifelse(is.na(prop), 0 , prop))
data_plot1 <- data_plot1 %>% mutate(n = if_else(is.na(n), 0 , n))
########## GRAFICO TORTA SIN FIN
p <- plot_ly(data_plot1, labels = ~sit_fin_r_2022r, values = ~round(prop,3), text = paste0(round(data_plot1$prop*100,1), "%"," <i>(", data_plot1$n,")</i>"), type = 'pie', hole = 0, textposition = 'outside',
textinfo = 'label+text', marker = list(colors = ~color)) %>%
layout(
legend = list(font = list(family = "verdana", size = 18, color = azul),
orientation = "h", x=0.1 , y=1.5),
font= list(family = "verdana", size = 17, color = azul),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
paper_bgcolor='transparent', autosize = T
)
# url_sin_fin_g = paste0(getwd(),"/Img temp/",ee,"_sit_fin_g.png")
# orca(p, url_sin_fin_g)
url_sin_fin_g = paste0(getwd(),"/Img temp/",ee,"_sit_fin_g.png")
save_image(p, url_sin_fin_g)
########## GRAFICO BARRA CURSO DESVINC
data_plot2_n <- data_plot2_n_todos %>% filter(rbd_2022r == ee)
data_plot2 <- data_plot2 %>% arrange(nom_grado_2022r) #estopodria hacerse fuera del loop
data_plot2_t <- desvinc %>% group_by(nom_grado_2022r) %>% summarise(n = n())
data_plot2  <- left_join(data_plot2, data_plot2_t, by="nom_grado_2022r")
data_plot2  <- left_join(data_plot2, data_plot2_n, by="nom_grado_2022r")
data_plot2  <- data_plot2 %>% mutate(n = ifelse(is.na(n), 0, n)) %>% mutate(porc_desvinc = ifelse(n_total != 0, 100*round(n/n_total, 3), 0))
#print(data_plot2)
k <- plot_ly(x=~data_plot2$nom_grado_2022r, y = ~data_plot2$n , type = "bar", marker = list(color = celeste), text = paste0("<b style='color:#007096'>", data_plot2$n), textfont = list(family = "verdana", size = 35, color = '#FFFFFF'), textposition = 'outside') %>%
layout(font = list(family = "verdana", color = azul, size = 30), title = "",  #azul antiguo '#007096'
xaxis=list(title="<b>Grado 2022</b>", font = list(family = "verdana", size = 40), showlegend = FALSE,  categoryarray = fct_rev(data_plot2$nom_grado_2022r), categoryorder = "array", tickangle = -45),
yaxis=list(title="<b>N° estudiantes 2022 no matriculados en 2023</b>", font = list(family = "verdana", size = 24), range = list(0, max(data_plot2$n) + 5), showlegend = FALSE, showgrid = F, autotick = FALSE, dtick = 5),
plot_bgcolor='transparent', paper_bgcolor='transparent', autosize = F, width = 2000, height = 1200, margin = list(l=-0.1, t = -0.1, r=-0.1))
# url_cur_desv_g = paste0("/Img temp/", ee,"_cur_desv_g.png")
# orca(k, url_cur_desv_g)
url_cur_desv_g = paste0(getwd(),"/Img temp/", ee,"_cur_desv_g.png")
save_image(k, url_cur_desv_g)
########## GRAFICO BARRA CURSO RETIRADOS
data_plot2_n_2 <- data_plot2_n_2_todos %>% filter(rbd == ee)
data_plot2_2 <- data_plot2_2 %>% arrange(nom_grado)
data_plot2_t_2 <- desvinc2 %>% group_by(nom_grado) %>% summarise(n = n())
data_plot2_2  <- left_join(data_plot2_2, data_plot2_t_2, by="nom_grado")
data_plot2_2  <- left_join(data_plot2_2, data_plot2_n_2, by="nom_grado")
data_plot2_2  <- data_plot2_2 %>% mutate(n = ifelse(is.na(n), 0, n)) %>% mutate(porc_desvinc = ifelse(n_total != 0, 100*round(n/n_total, 3), 0))
k2 <- plot_ly(x=~data_plot2_2$nom_grado, y = ~data_plot2_2$n , type = "bar", marker = list(color = celeste), text = paste0("<b style='color:#007096'>", data_plot2_2$n), textfont = list(family = "verdana", size = 35, color = '#FFFFFF'), textposition = 'outside') %>%
layout(font = list(family = "verdana", color = azul, size = 30), title = "", #azul antiguo '#007096'
xaxis=list(title="<b>Grado 2023</b>", font = list(family = "verdana", size = 40), showlegend = FALSE,  categoryarray = fct_rev(data_plot2_2$nom_grado), categoryorder = "array", tickangle = -45),
yaxis=list(title="<b>N° estudiantes 2023 retirados sin matríc. vigente</b>", font = list(family = "verdana", size = 24), range = list(0, max(data_plot2_2$n) + 3), showlegend = FALSE, showgrid = F, autotick = FALSE, dtick = 5),
plot_bgcolor='transparent', paper_bgcolor='transparent', autosize = F, width = 2000, height = 1200, margin = list(l=-0.1, t = -0.1, r=-0.1))
# url_cur_desv_g_2 = paste0("/Img temp/", ee,"_cur_desv_g_2.png")
# orca(k2, url_cur_desv_g_2)
url_cur_desv_g_2 = paste0(getwd(),"/Img temp/", ee,"_cur_desv_g_2.png")
save_image(k2, url_cur_desv_g_2)
########## GRAFICO BARRA INASISTENCIA GRAVE
data_plot3_t <- asis_crit %>% group_by(cod_curso) %>% summarise(n = n())
data_plot3_n <- data_plot3_n_todos %>% filter(rbd == ee)
data_plot3  <- data_plot3 %>% arrange(desc(cod_curso))
data_plot3  <- left_join(data_plot3, data_plot3_t, by="cod_curso")
data_plot3  <- left_join(data_plot3, data_plot3_n, by="cod_curso")
data_plot3  <- data_plot3 %>% mutate(n = ifelse(is.na(n), 0, n)) %>% mutate(porc_asis = ifelse(n_total != 0, 100*round(n/n_total, 3), 0))
j <- plot_ly() %>% add_trace(x = ~data_plot3$porc_asis, y = ~data_plot3$cod_curso, marker = list(color = celeste), type = "bar", orientation = "v", text = paste0("<b style='color:#007096'>", data_plot3$porc_asis, "%","</b>", "<i style='color:#007096';> (", data_plot3$n," de ", data_plot3$n_total,")</i>"), textposition = "outside", textfont = list(family = "verdana", size = 30, color = '#FFFFFF'))
j <- j %>% layout(font = list(family = "verdana", color = azul, size = 30), title = "",  #azul antiguo '#007096'
xaxis = list(title="<b>% Estudiantes 2023 con asistencia bajo 85%</b> <i> (N° Estudiantes respecto a matrícula 2023)</i>", font = list(family = "verdana", size = 30), range = list(0, max(data_plot3$porc_asis) + 19), showlegend = FALSE, ticksuffix = "%", showgrid = FALSE, side = "top"),
yaxis = list(title="<b>Grado 2023</b>", font = list(family = "verdana", size = 30), showlegend = FALSE,  categoryarray = fct_rev(data_plot3$cod_curso), categoryorder = "array"),
plot_bgcolor='transparent', paper_bgcolor='transparent', autosize = F, width = 2000, height = 1200, margin = list(l=-0.1, t = -0.1, r=-0.1)
)
#
# j <- plot_ly(x=~data_plot3$cod_curso, y = ~data_plot3$porc_asis , type = "bar", marker = list(color = celeste), text = paste0(data_plot3$n," (",data_plot3$n, " de ",data_plot3$n_total,")"), texttemplate = '%{y}', textposition = 'outside') %>%
#   layout(title="", xaxis=list(font = f4, title='<b>Curso</b>'), yaxis=list(title="<b>N° Estudiantes</b>", autotick = FALSE, dtick = 5),
#          font=f4, plot_bgcolor='transparent', paper_bgcolor='transparent', autosize=T)
#
# url_asis_crit_g = paste0("/Img temp/", ee,"_asis_crit_g.png")
# orca(j, url_asis_crit_g)
url_asis_crit_g = paste0(getwd(),"/Img temp/", ee,"_asis_crit_g.png")
save_image(j, url_asis_crit_g)
########## GRAFICO TORTA INASISTENCIA GRAVE
o <- plot_ly(data_plot5, labels = ~tipo_asis_2, values = ~round(prop,3), type = 'pie', hole = 0.5, textposition = 'outside', text = paste0(round(data_plot5$prop,3)*100,"%<br><i>(", data_plot5$n,")</i>"),
textinfo = 'text', sort = FALSE, marker = list(colors = ~color)) %>%
layout(legend = list(font = list(family = "verdana", size = 14, color = azul), x=1.3 , y=0.5), font=list(family = "verdana", size = 16, color = azul), xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
paper_bgcolor='transparent', autosize = TRUE, margin = list(l = -5, r = -5)
)
# url_asis_crit_tort_g = paste0("/Img temp/", ee,"_asis_crit_tort_g.png")
# orca(o, url_asis_crit_tort_g)
url_asis_crit_tort_g = paste0(getwd(),"/Img temp/", ee,"_asis_crit_tort_g.png")
save_image(o, url_asis_crit_tort_g)
#**************************************************************************************************************************/
### 3.4 RENDER  ----------------------------------------------------------------
#**************************************************************************************************************************/
#Sys.setlocale("LC_ALL","Spanish")
Sys.setlocale("LC_ALL", "ES_ES.UTF-8")
rmarkdown::render("codigos/1 - escuelas/RMKD Informe Escuela - copia.Rmd",
params = list("rbd" = ee, "nom_rbd" = nom_rbd, "nom_com_rbd" = nom_com_rbd, "desvinc" = desvinc, "desvinc2" = desvinc2, "desvinc3" = desvinc3, "asis_crit" = asis_crit, "url_sin_fin_g" = url_sin_fin_g, "url_cur_desv_g" = url_cur_desv_g, "url_cur_desv_g_2" = url_cur_desv_g_2,"url_asis_crit_g" = url_asis_crit_g, "url_asis_crit_tort_g" = url_asis_crit_tort_g,
"n_mat2022" = n_mat2022, "n_desvinc" = n_desvinc, "n_desvinc2" = n_desvinc2, "n_desvinc3" = n_desvinc3, "n_mat2023" = n_mat2023, "n_inasis2023" = n_inasis2023, "textos_variables_desvinculados" = textos_variables_desvinculados, "textos_variables_retirados" = textos_variables_retirados, "textos_variables_asistencia" = textos_variables_asistencia, "textos_variables_doble_desvinculados" = textos_variables_doble_desvinculados, "pass" = pass),
output_file = paste0("Outputs/Escuelas_0/", ee, ".pdf")) # Se modifica el Escuelas 0 para editar la carpeta en al que se guardan
print(paste0("Listo ", i ," de ", nn, " establecimientos. (RBD: ", ee, ")"))
toc()
}) #cierre Try
}
}
rbds1 <- 1
{
# ee = rbds0[10]
for(ee in rbds1){ #rbds1[1]){     #(ee in quinto1$`0`){   #for(ee in unique(bd_asis$rbd)){ #9810 EEFRANI #3055 #3573 no tiene desvinc  #c(9647, 9648, 9653, 9654, 9655)
try({   #En caso de que código tenga error el código sigue ejectuándose
tic()
#**************************************************************************************************************************/
### 3.3 PRE RENDER  ----------------------------------------------------------------
#**************************************************************************************************************************/
i = i+1
pass = paste0("r", ee)
########## SE COMIENZA CON DESVINCULADOS
desvinc <- bd[bd$rbd_2022r == ee,]
nrow(desvinc)
#Grados de los alumnos desvinculados del establecimiento
data_plot2 <- data.frame(nom_grado_2022r = unique(desvinc$nom_grado_2022r))
#valor con el n desvinculados del rbd
n_mat2022 <- nrow(desvinc)
# Dejamos solo estudiantes desertores en mayo y por si acaso se filtra fallecidos, aunque ya vienen como deserción == 0
desvinc <- desvinc %>% filter(categoria_desert == "Desercion incidencia")
desvinc2 <- bd2[bd2$rbd_ret == ee,]
desvinc2 <- desvinc2 %>% filter(categoria_desert == "Retirado 2023")
#Esta version es más rápida porque disminuye el tiempo de asignacion
# tic()
# desvinc2_aa <- bd2 %>% filter(rbd_ret==ee & categoria_desert=="Retirado 2023")
# toc()
desvinc3 <- doble_desvinc[doble_desvinc$rbd == ee,]
n_desvinc <- nrow(desvinc)
n_desvinc2 <- nrow(desvinc2)
n_desvinc3 <- nrow(desvinc3)
desvinc <- desvinc %>% select("run_alu2", "nom_alu2022", "app_alu2022", "apm_alu2022", "gen_alu_2022r", "edad_alu_2022r", "nom_com_alu2022", "nom_grado_2022r", "prom_gral2022", "asistencia2022", "sit_fin_r_2022r",
"rbd_2022r", "nom_rbd_2022r", "cod_depe2_2022r", "cod_reg_rbd2022r2", "nom_com_rbd_2022r", "nom_deprov_rbd2022", "nombre_sost_rbd2022", "rut_sost_rbd2022", "email_sost_rbd2022",  "tel_sost_rbd", "cert_val_22", "valid_estud")
desvinc <- desvinc %>% arrange(nom_grado_2022r)
desvinc2 <- desvinc2 %>% select("run_alu2_ret", "nom_alu_ret", "app_alu_ret", "apm_alu_ret", "gen_alu_ret", "edad_alu_ret", "nom_com_alu_ret", "nom_grado", "fec_ret_rbd_ret", "valid_estud")
desvinc2 <- desvinc2 %>% arrange(nom_grado)   #(nom_grado_2022r)
#desvinc3 <- desvinc3 %>% select("run_alu2", "nom_alu", "app_alu", "apm_alu", "gen_alu", "edad_alu", "nom_com_alu", "nom_grado", "sit_fin_r", "rbd", "nom_rbd", "cod_depe2", "cod_reg_rbd", "nom_com_rbd", "cert_val_22") # cert vald 21? muchos vacios
#"nom_deprov_rbd2022", "nombre_sost_rbd2022", "rut_sost_rbd2022", "email_sost_rbd2022",  "tel_sost_rbd", "valid_estud")
desvinc3 <- desvinc3 %>% select("run_alu2", "nom_alu", "app_alu", "apm_alu", "gen_alu", "edad_alu", "nom_com_alu", "nom_grado", "sit_fin_r", "rbd", "nom_rbd", "cod_depe2", "cod_reg_rbd", "nom_com_rbd", "cert_val_21", "cert_val_22", "insc_val_23") # cert vald 21? muchos vacios
desvinc3 <- desvinc3 %>% arrange(nom_grado)
########## SE EXTRAEN LOS CASOS DE INASISTENCIA Y PARAMETROS
asis_crit <- bd_asis[bd_asis$rbd == ee,]
data_plot3 <- data.frame(cod_curso = unique(asis_crit$cod_curso))
data_plot2_2 <- data.frame(nom_grado = unique(asis_crit$nom_grado))
nom_rbd <- asis_crit$nom_rbd[1]
print("------")
print(ee)
print(nom_rbd)
nom_com_rbd <- asis_crit$nom_com_rbd[1]
print(nom_com_rbd)
n_mat2023 = nrow(asis_crit)
#Datos gráfico de barra de rangos de asistencia
#Esta seccion no tiene informacion que sea necesaria para el loop, por lo que podria sacarse y no alterar el funcionamiento.
#Definir el data_plot para cada establecimiento puede ser demandante de tiempo
#podriamos agregar otra variable al cache?
data_plot5 <- data.frame(tipo_asis_2 = c("Inasist. crítica (0%-49% asist.)", "Inasist. grave (50%-84% asist.)", "Inasist. reiterada (85%-89% asist.)", "Asist. esperada (90%-100% asist.)", "Sin información"), color = c(rojo, amarillo, celeste, azul, gris))  #azul celeste amarillo rosado rojo gris
data_plot5$tipo_asis_2 <- factor(data_plot5$tipo_asis_2, levels = c("Inasist. crítica (0%-49% asist.)", "Inasist. grave (50%-84% asist.)","Inasist. reiterada (85%-89% asist.)", "Asist. esperada (90%-100% asist.)", "Sin información"), labels =  c("Inasist. crítica (0%-49% asist.)", "Inasist. grave (50%-84% asist.)", "Inasist. reiterada (85%-89% asist.)", "Asist. esperada (90%-100% asist.)", "Sin información"))
data_plot5$tipo_asis_2
#arriba se definio n_mat2023 como nrow(asis_crit) podriamos incorporarlo para llamar variables del cache?
if(nrow(asis_crit) > 0){
data_plot5_t <- prop.table(table(asis_crit$tipo_asis_2))
data_plot5_t <- data.frame("tipo_asis_2"=names(data_plot5_t), "prop" = as.numeric(data_plot5_t))
data_plot5_t_n <- table(asis_crit$tipo_asis_2)
data_plot5_t_n <- data.frame("tipo_asis_2"=names(data_plot5_t_n), "n" = as.numeric(data_plot5_t_n))
} else{
data_plot5_t <- data.frame(tipo_asis_2= c("Inasist. crítica (0%-49% asist.)", "Inasist. grave (50%-84% asist.)", "Inasist. reiterada (85%-89% asist.)", "Asist. esperada (90%-100% asist.)", "Sin información"), prop = c(0,0,0,0,0))
data_plot5_t_n <- data.frame(tipo_asis_2= c("Inasist. crítica (0%-49% asist.)", "Inasist. grave (50%-84% asist.)", "Inasist. reiterada (85%-89% asist.)", "Asist. esperada (90%-100% asist.)", "Sin información"), n = c(0,0,0,0,0))
}
#data_plot5_t
data_plot5 <- left_join(data_plot5, data_plot5_t, by = "tipo_asis_2")
data_plot5 <- left_join(data_plot5, data_plot5_t_n, by = "tipo_asis_2")
data_plot5 <- data_plot5 %>% mutate(prop = ifelse(is.na(prop), 0 , prop))
data_plot5 <- data_plot5 %>% mutate(n = ifelse(is.na(n), 0 , n))
####------
asis_crit <- asis_crit %>% filter(inasistencia_grave_acumulada == TRUE)
n_inasis2023 = nrow(asis_crit)
# asis_crit <- asis_crit %>%
# select("run_alu2", "nom_alu", "app_alu", "apm_alu", "cod_curso", "rbd",
# "porcentage_asistencia_marzo","porcentage_asistencia_abril","porcentage_asistencia_mayo",
# "porcentage_asistencia_junio","porcentage_asistencia_julio","porcentage_asistencia_agosto",
# "porcentage_asistencia_septiembre","porcentage_asistencia_octubre","porcentage_asistencia_noviembre",
# "porcentage_asistencia_acumulada", "inasistencia_grave_acumulada", "asistencia_categorias_acumulada", "tipo_asis_2")
# Debemos agregar los meses de asistencia que faltan
asis_crit <- asis_crit %>% select("run_alu2", "nom_alu", "app_alu", "apm_alu",
"cod_curso", "rbd", "porcentage_asistencia_marzo",
"porcentage_asistencia_abril", "porcentage_asistencia_mayo",
"porcentage_asistencia_junio", "porcentage_asistencia_julio", "porcentage_asistencia_agosto",
"porcentage_asistencia_septiembre","porcentage_asistencia_octubre",
"porcentage_asistencia_acumulada", "inasistencia_grave_acumulada", "asistencia_categorias_acumulada", "tipo_asis_2", "asistencia_2022", "sit_fin_22")
"Ordenamos por nivel y asistencia acumulada"
asis_crit <- asis_crit %>% arrange(cod_curso, porcentage_asistencia_acumulada)
"Modificamos las variables de asistencia"
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_acumulada = ifelse(!is.na(porcentage_asistencia_acumulada), paste0(round(porcentage_asistencia_acumulada*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_marzo = ifelse(!is.na(porcentage_asistencia_marzo), paste0(round(porcentage_asistencia_marzo*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_abril = ifelse(!is.na(porcentage_asistencia_abril), paste0(round(porcentage_asistencia_abril*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_mayo = ifelse(!is.na(porcentage_asistencia_mayo), paste0(round(porcentage_asistencia_mayo*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_junio = ifelse(!is.na(porcentage_asistencia_junio), paste0(round(porcentage_asistencia_junio*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_julio = ifelse(!is.na(porcentage_asistencia_julio), paste0(round(porcentage_asistencia_julio*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_agosto = ifelse(!is.na(porcentage_asistencia_agosto), paste0(round(porcentage_asistencia_agosto*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_septiembre = ifelse(!is.na(porcentage_asistencia_septiembre), paste0(round(porcentage_asistencia_septiembre*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(porcentage_asistencia_octubre = ifelse(!is.na(porcentage_asistencia_octubre), paste0(round(porcentage_asistencia_octubre*100,0),"%"), "-"))
# Desmarcar para los otros niveles de asistencia
# asis_crit <- asis_crit %>% mutate(porcentage_asistencia_junio = ifelse(!is.na(porcentage_asistencia_junio), paste0(round(porcentage_asistencia_junio*100,0),"%"), "-"))
# asis_crit <- asis_crit %>% mutate(porcentage_asistencia_julio = ifelse(!is.na(porcentage_asistencia_julio), paste0(round(porcentage_asistencia_julio*100,0),"%"), "-"))
# asis_crit <- asis_crit %>% mutate(porcentage_asistencia_agosto = ifelse(!is.na(porcentage_asistencia_agosto), paste0(round(porcentage_asistencia_agosto*100,0),"%"), "-"))
# asis_crit <- asis_crit %>% mutate(porcentage_asistencia_septiembre = ifelse(!is.na(porcentage_asistencia_septiembre), paste0(round(porcentage_asistencia_septiembre*100,0),"%"), "-"))
# asis_crit <- asis_crit %>% mutate(porcentage_asistencia_octubre = ifelse(!is.na(porcentage_asistencia_octubre), paste0(round(porcentage_asistencia_octubre*100,0),"%"), "-"))
# asis_crit <- asis_crit %>% mutate(porcentage_asistencia_noviembre = ifelse(!is.na(porcentage_asistencia_noviembre), paste0(round(porcentage_asistencia_noviembre*100,0),"%"), "-"))
asis_crit <- asis_crit %>% mutate(asistencia_2022 = ifelse(!is.na(asistencia_2022), paste0(round(asistencia_2022*100,0),"%"), "-"))
#print(desvinc)
#print(asis_crit)
########## GRAFICO SIT_FIN
data_plot1 <- data.frame(sit_fin_r_2022r = c("Promovido", "Reprobado", "Retirado", "Sin Registro"), color = c(azul, celeste, rojo, amarillo))
data_plot1$sit_fin_r_2022r <- factor(data_plot1$sit_fin_r_2022r, levels =  c("Promovido", "Reprobado", "Retirado", "Sin Registro"), labels =  c("Promovido", "Reprobado", "Retirado", "Sin Registro"))
if(nrow(desvinc) > 0){
data_plot1_t <- prop.table(table(desvinc$sit_fin_r_2022r))
data_plot1_t <- data.frame("sit_fin_r_2022r"=names(data_plot1_t), "prop" = as.numeric(data_plot1_t))
data_plot1_t_n <- table(desvinc$sit_fin_r_2022r)
data_plot1_t_n <- data.frame("sit_fin_r_2022r"=names(data_plot1_t_n), "n" = as.numeric(data_plot1_t_n))
} else{
data_plot1_t <- data.frame(sit_fin_r_2022r= c("Promovido", "Reprobado", "Retirado", "Sin Registro"), prop = c(0,0,0,0))
data_plot1_t_n <- data.frame(sit_fin_r_2022r= c("Promovido", "Reprobado", "Retirado", "Sin Registro"), n = c(0,0,0,0))
}
data_plot1 <- left_join(data_plot1, data_plot1_t, by = "sit_fin_r_2022r")
data_plot1 <- left_join(data_plot1, data_plot1_t_n, by = "sit_fin_r_2022r")
data_plot1 <- data_plot1 %>% mutate(prop = ifelse(is.na(prop), 0 , prop))
data_plot1 <- data_plot1 %>% mutate(n = if_else(is.na(n), 0 , n))
########## GRAFICO TORTA SIN FIN
p <- plot_ly(data_plot1, labels = ~sit_fin_r_2022r, values = ~round(prop,3), text = paste0(round(data_plot1$prop*100,1), "%"," <i>(", data_plot1$n,")</i>"), type = 'pie', hole = 0, textposition = 'outside',
textinfo = 'label+text', marker = list(colors = ~color)) %>%
layout(
legend = list(font = list(family = "verdana", size = 18, color = azul),
orientation = "h", x=0.1 , y=1.5),
font= list(family = "verdana", size = 17, color = azul),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
paper_bgcolor='transparent', autosize = T
)
# url_sin_fin_g = paste0(getwd(),"/Img temp/",ee,"_sit_fin_g.png")
# orca(p, url_sin_fin_g)
url_sin_fin_g = paste0(getwd(),"/Img temp/",ee,"_sit_fin_g.png")
save_image(p, url_sin_fin_g)
########## GRAFICO BARRA CURSO DESVINC
data_plot2_n <- data_plot2_n_todos %>% filter(rbd_2022r == ee)
data_plot2 <- data_plot2 %>% arrange(nom_grado_2022r) #estopodria hacerse fuera del loop
data_plot2_t <- desvinc %>% group_by(nom_grado_2022r) %>% summarise(n = n())
data_plot2  <- left_join(data_plot2, data_plot2_t, by="nom_grado_2022r")
data_plot2  <- left_join(data_plot2, data_plot2_n, by="nom_grado_2022r")
data_plot2  <- data_plot2 %>% mutate(n = ifelse(is.na(n), 0, n)) %>% mutate(porc_desvinc = ifelse(n_total != 0, 100*round(n/n_total, 3), 0))
#print(data_plot2)
k <- plot_ly(x=~data_plot2$nom_grado_2022r, y = ~data_plot2$n , type = "bar", marker = list(color = celeste), text = paste0("<b style='color:#007096'>", data_plot2$n), textfont = list(family = "verdana", size = 35, color = '#FFFFFF'), textposition = 'outside') %>%
layout(font = list(family = "verdana", color = azul, size = 30), title = "",  #azul antiguo '#007096'
xaxis=list(title="<b>Grado 2022</b>", font = list(family = "verdana", size = 40), showlegend = FALSE,  categoryarray = fct_rev(data_plot2$nom_grado_2022r), categoryorder = "array", tickangle = -45),
yaxis=list(title="<b>N° estudiantes 2022 no matriculados en 2023</b>", font = list(family = "verdana", size = 24), range = list(0, max(data_plot2$n) + 5), showlegend = FALSE, showgrid = F, autotick = FALSE, dtick = 5),
plot_bgcolor='transparent', paper_bgcolor='transparent', autosize = F, width = 2000, height = 1200, margin = list(l=-0.1, t = -0.1, r=-0.1))
# url_cur_desv_g = paste0("/Img temp/", ee,"_cur_desv_g.png")
# orca(k, url_cur_desv_g)
url_cur_desv_g = paste0(getwd(),"/Img temp/", ee,"_cur_desv_g.png")
save_image(k, url_cur_desv_g)
########## GRAFICO BARRA CURSO RETIRADOS
data_plot2_n_2 <- data_plot2_n_2_todos %>% filter(rbd == ee)
data_plot2_2 <- data_plot2_2 %>% arrange(nom_grado)
data_plot2_t_2 <- desvinc2 %>% group_by(nom_grado) %>% summarise(n = n())
data_plot2_2  <- left_join(data_plot2_2, data_plot2_t_2, by="nom_grado")
data_plot2_2  <- left_join(data_plot2_2, data_plot2_n_2, by="nom_grado")
data_plot2_2  <- data_plot2_2 %>% mutate(n = ifelse(is.na(n), 0, n)) %>% mutate(porc_desvinc = ifelse(n_total != 0, 100*round(n/n_total, 3), 0))
k2 <- plot_ly(x=~data_plot2_2$nom_grado, y = ~data_plot2_2$n , type = "bar", marker = list(color = celeste), text = paste0("<b style='color:#007096'>", data_plot2_2$n), textfont = list(family = "verdana", size = 35, color = '#FFFFFF'), textposition = 'outside') %>%
layout(font = list(family = "verdana", color = azul, size = 30), title = "", #azul antiguo '#007096'
xaxis=list(title="<b>Grado 2023</b>", font = list(family = "verdana", size = 40), showlegend = FALSE,  categoryarray = fct_rev(data_plot2_2$nom_grado), categoryorder = "array", tickangle = -45),
yaxis=list(title="<b>N° estudiantes 2023 retirados sin matríc. vigente</b>", font = list(family = "verdana", size = 24), range = list(0, max(data_plot2_2$n) + 3), showlegend = FALSE, showgrid = F, autotick = FALSE, dtick = 5),
plot_bgcolor='transparent', paper_bgcolor='transparent', autosize = F, width = 2000, height = 1200, margin = list(l=-0.1, t = -0.1, r=-0.1))
# url_cur_desv_g_2 = paste0("/Img temp/", ee,"_cur_desv_g_2.png")
# orca(k2, url_cur_desv_g_2)
url_cur_desv_g_2 = paste0(getwd(),"/Img temp/", ee,"_cur_desv_g_2.png")
save_image(k2, url_cur_desv_g_2)
########## GRAFICO BARRA INASISTENCIA GRAVE
data_plot3_t <- asis_crit %>% group_by(cod_curso) %>% summarise(n = n())
data_plot3_n <- data_plot3_n_todos %>% filter(rbd == ee)
data_plot3  <- data_plot3 %>% arrange(desc(cod_curso))
data_plot3  <- left_join(data_plot3, data_plot3_t, by="cod_curso")
data_plot3  <- left_join(data_plot3, data_plot3_n, by="cod_curso")
data_plot3  <- data_plot3 %>% mutate(n = ifelse(is.na(n), 0, n)) %>% mutate(porc_asis = ifelse(n_total != 0, 100*round(n/n_total, 3), 0))
j <- plot_ly() %>% add_trace(x = ~data_plot3$porc_asis, y = ~data_plot3$cod_curso, marker = list(color = celeste), type = "bar", orientation = "v", text = paste0("<b style='color:#007096'>", data_plot3$porc_asis, "%","</b>", "<i style='color:#007096';> (", data_plot3$n," de ", data_plot3$n_total,")</i>"), textposition = "outside", textfont = list(family = "verdana", size = 30, color = '#FFFFFF'))
j <- j %>% layout(font = list(family = "verdana", color = azul, size = 30), title = "",  #azul antiguo '#007096'
xaxis = list(title="<b>% Estudiantes 2023 con asistencia bajo 85%</b> <i> (N° Estudiantes respecto a matrícula 2023)</i>", font = list(family = "verdana", size = 30), range = list(0, max(data_plot3$porc_asis) + 19), showlegend = FALSE, ticksuffix = "%", showgrid = FALSE, side = "top"),
yaxis = list(title="<b>Grado 2023</b>", font = list(family = "verdana", size = 30), showlegend = FALSE,  categoryarray = fct_rev(data_plot3$cod_curso), categoryorder = "array"),
plot_bgcolor='transparent', paper_bgcolor='transparent', autosize = F, width = 2000, height = 1200, margin = list(l=-0.1, t = -0.1, r=-0.1)
)
#
# j <- plot_ly(x=~data_plot3$cod_curso, y = ~data_plot3$porc_asis , type = "bar", marker = list(color = celeste), text = paste0(data_plot3$n," (",data_plot3$n, " de ",data_plot3$n_total,")"), texttemplate = '%{y}', textposition = 'outside') %>%
#   layout(title="", xaxis=list(font = f4, title='<b>Curso</b>'), yaxis=list(title="<b>N° Estudiantes</b>", autotick = FALSE, dtick = 5),
#          font=f4, plot_bgcolor='transparent', paper_bgcolor='transparent', autosize=T)
#
# url_asis_crit_g = paste0("/Img temp/", ee,"_asis_crit_g.png")
# orca(j, url_asis_crit_g)
url_asis_crit_g = paste0(getwd(),"/Img temp/", ee,"_asis_crit_g.png")
save_image(j, url_asis_crit_g)
########## GRAFICO TORTA INASISTENCIA GRAVE
o <- plot_ly(data_plot5, labels = ~tipo_asis_2, values = ~round(prop,3), type = 'pie', hole = 0.5, textposition = 'outside', text = paste0(round(data_plot5$prop,3)*100,"%<br><i>(", data_plot5$n,")</i>"),
textinfo = 'text', sort = FALSE, marker = list(colors = ~color)) %>%
layout(legend = list(font = list(family = "verdana", size = 14, color = azul), x=1.3 , y=0.5), font=list(family = "verdana", size = 16, color = azul), xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
paper_bgcolor='transparent', autosize = TRUE, margin = list(l = -5, r = -5)
)
# url_asis_crit_tort_g = paste0("/Img temp/", ee,"_asis_crit_tort_g.png")
# orca(o, url_asis_crit_tort_g)
url_asis_crit_tort_g = paste0(getwd(),"/Img temp/", ee,"_asis_crit_tort_g.png")
save_image(o, url_asis_crit_tort_g)
#**************************************************************************************************************************/
### 3.4 RENDER  ----------------------------------------------------------------
#**************************************************************************************************************************/
#Sys.setlocale("LC_ALL","Spanish")
Sys.setlocale("LC_ALL", "ES_ES.UTF-8")
rmarkdown::render("codigos/1 - escuelas/RMKD Informe Escuela - copia.Rmd",
params = list("rbd" = ee, "nom_rbd" = nom_rbd, "nom_com_rbd" = nom_com_rbd, "desvinc" = desvinc, "desvinc2" = desvinc2, "desvinc3" = desvinc3, "asis_crit" = asis_crit, "url_sin_fin_g" = url_sin_fin_g, "url_cur_desv_g" = url_cur_desv_g, "url_cur_desv_g_2" = url_cur_desv_g_2,"url_asis_crit_g" = url_asis_crit_g, "url_asis_crit_tort_g" = url_asis_crit_tort_g,
"n_mat2022" = n_mat2022, "n_desvinc" = n_desvinc, "n_desvinc2" = n_desvinc2, "n_desvinc3" = n_desvinc3, "n_mat2023" = n_mat2023, "n_inasis2023" = n_inasis2023, "textos_variables_desvinculados" = textos_variables_desvinculados, "textos_variables_retirados" = textos_variables_retirados, "textos_variables_asistencia" = textos_variables_asistencia, "textos_variables_doble_desvinculados" = textos_variables_doble_desvinculados, "pass" = pass),
output_file = paste0("Outputs/Escuelas_0/", ee, ".pdf")) # Se modifica el Escuelas 0 para editar la carpeta en al que se guardan
print(paste0("Listo ", i ," de ", nn, " establecimientos. (RBD: ", ee, ")"))
toc()
}) #cierre Try
}
}
